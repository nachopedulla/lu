{"version":3,"sources":["components/countdown.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","container","margin","display","justifyContent","block","width","height","border","padding","fontSize","flexFlow","label","color","fontWeight","Countdown","props","classes","startDate","moment","endDate","diff","duration","value","className","years","months","days","hours","minutes","seconds","content","marginTop","overflow","form","borderRadius","button","backgroundColor","errorLabel","line","compare","String","fromCharCode","App","useState","logged","setLogged","password","setPassword","error","setError","Date","currentDate","setCurrentDate","useEffect","setTimeout","mainPage","loginForm","Form","onSubmit","event","preventDefault","stopPropagation","Control","type","placeholder","onChange","target","onClick","countdown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d89d00f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        margin: 'auto',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        '@media(max-width: 600px)': {\r\n            display: 'block',\r\n            margin: '20px auto 50px auto'\r\n        }\r\n    },\r\n    block: {\r\n        width: '120px',\r\n        height: '10%',\r\n        border: '1px solid #dedddd',\r\n        padding: '4px',\r\n        margin: '5px',\r\n        fontSize: '.9rem',\r\n        flexFlow: 'row',\r\n        '@media(max-width: 600px)': {\r\n            width: '120px',\r\n            margin: '5px auto',\r\n            height: 'auto'\r\n        }\r\n    },\r\n    label: {\r\n        color: '#00A170',\r\n        fontWeight: '500'\r\n    }\r\n})\r\n\r\nconst Countdown = (props) => {\r\n\r\n    const classes = useStyles();\r\n    \r\n    const startDate = moment(props.startDate);\r\n    const endDate = moment(props.endDate);\r\n    const diff = moment.duration(endDate.diff(startDate));\r\n\r\n    const block = (value, label) => (\r\n        <div className={classes.block}>\r\n            <div>{value}</div>\r\n            <div className={classes.label}>{label}</div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {block(diff.years(), 'A침os')}\r\n            {block(diff.months(), 'Meses')}\r\n            {block(diff.days(), 'D칤as')}\r\n            {block(diff.hours(), 'Horas')}\r\n            {block(diff.minutes(), 'Minutos')}\r\n            {block(diff.seconds(), 'Segundos')}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Countdown;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Countdown from './components/countdown';\nimport Form from 'react-bootstrap/Form';\nimport { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  content: {\n    width: '80%',\n    margin: 'auto',\n    marginTop: '60px',\n    fontSize: '.9rem',\n    overflow: 'auto'\n  },\n  form: {\n    padding: '30px 20px',\n    border: '1px solid #d0cbcb',\n    borderRadius: '10px',\n    width: '350px',\n    margin: 'auto',\n\n    '@media(max-width: 600px)': {\n      width: '90%'\n    }\n  },\n  button: {\n    backgroundColor: '#00A170',\n    border: 'none',\n    fontSize: '1rem',\n    borderRadius: '5px',\n    padding: '8px 10px',\n    color: 'white'\n  },\n  errorLabel: {\n    marginTop: '20px',\n    color: 'red',\n  },\n  line: {\n    height: '2px',\n    margin: '30px auto',\n    backgroundColor: '#00A170'\n  }\n})\n\nconst compare = String.fromCharCode(109, 111, 110, 111, 110, 97);\n\nconst App = () => {\n\n  const [logged, setLogged] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const classes=useStyles();\n\n  useEffect(() => { setTimeout(() => setCurrentDate(new Date()), 1000) }, )\n\n  const loginHandler = (event) => {\n      if (password === compare) {\n        setLogged(true);\n        setError(false);\n      } else {\n        setPassword(\"\");\n        setError(true);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n  } \n\n  const passwordChangeHandler = (value) => setPassword(value);\n\n  const mainPage = (\n    <>\n      <div className={classes.line}></div>\n      <h4>Lu</h4>\n      <p> Esta p치gina es para que siempre y desde cualquier lugar del 游깵 sepas lo mucho que te quiero 游눘 </p>\n      <div className={classes.line}></div>\n    </>\n  );\n\n  const errorLabel = <p className={classes.errorLabel}>{(error) ? 'La contrase침a ingresada es inv치lida' : '' }</p> ;\n\n  const loginForm = (\n    <div className={classes.form}>\n        <Form onSubmit={loginHandler}>\n        <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password}\n            onChange={(event) => passwordChangeHandler(event.target.value)}/>\n          {errorLabel}\n        <input className={classes.button} type=\"submit\" onClick={() => {}} value={'Ingresar'}/>\n      </Form>\n    </div>\n  )\n\n  const countdown = (\n    <>\n      <h6>Tiempo desde que sos mi novia</h6>\n      <Countdown startDate={new Date(2021, 7, 7, 20, 0, 0)} endDate={currentDate}/>\n    </>\n  )\n\n\n  return (\n    <div className=\"App\">\n      <div className={classes.content}>{\n        (logged) ? (\n          <>\n            {mainPage}\n            {countdown}\n          </>\n        ) : loginForm}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}