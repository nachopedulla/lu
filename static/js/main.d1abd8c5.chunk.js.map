{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","content","width","margin","marginTop","fontSize","form","padding","border","borderRadius","button","backgroundColor","color","errorLabel","line","height","compare","String","fromCharCode","App","useState","logged","setLogged","password","setPassword","error","setError","classes","mainPage","className","loginForm","Form","onSubmit","event","preventDefault","stopPropagation","Control","type","placeholder","value","onChange","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAOMA,EAAYC,YAAW,CAC3BC,QAAS,CACPC,MAAO,MACPC,OAAQ,OACRC,UAAW,OACXC,SAAU,SAEZC,KAAM,CACJC,QAAS,YACTC,OAAQ,oBACRC,aAAc,OACdP,MAAO,QACPC,OAAQ,OAER,2BAA4B,CAC1BD,MAAO,QAGXQ,OAAQ,CACNC,gBAAiB,UACjBH,OAAQ,OACRH,SAAU,OACVI,aAAc,MACdF,QAAS,WACTK,MAAO,SAETC,WAAY,CACVT,UAAW,OACXQ,MAAO,OAETE,KAAM,CACJC,OAAQ,MACRZ,OAAQ,YACRQ,gBAAiB,aAIfK,EAAUC,OAAOC,aAAa,IAAK,IAAK,IAAK,IAAK,IAAK,IA8D9CC,EA5DH,WAEV,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAQ5B,IAgBR6B,EACJ,qCACE,qBAAKC,UAAWF,EAAQb,OACxB,oCACA,wJACA,qBAAKe,UAAWF,EAAQb,UAItBD,EAAa,mBAAGgB,UAAWF,EAAQd,WAAtB,SAAoCY,EAAS,4CAAwC,KAElGK,EACJ,qBAAKD,UAAWF,EAAQrB,KAAxB,SACI,eAACyB,EAAA,EAAD,CAAMC,SA3BS,SAACC,GACdV,IAAaP,GACfM,GAAU,GACVI,GAAS,KAETF,EAAY,IACZE,GAAS,GACTO,EAAMC,iBACND,EAAME,oBAmBN,UACA,cAACJ,EAAA,EAAKK,QAAN,CACIC,KAAK,WACLC,YAAY,WACZC,MAAOhB,EACPiB,SAAU,SAACP,GAAD,OApBWM,EAoBsBN,EAAMQ,OAAOF,MApBzBf,EAAYe,GAAvB,IAACA,KAqBtB1B,EACH,uBAAOgB,UAAWF,EAAQjB,OAAQ2B,KAAK,SAASK,QAAS,aAAUH,MAAO,kBAK1EtC,EACJ,qBAAK4B,UAAWF,EAAQ1B,QAAxB,SACIoB,EAAUO,EAAWE,IAI3B,OACE,qBAAKD,UAAU,MAAf,SACG5B,KCzFQ0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1abd8c5.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  content: {\n    width: '80%',\n    margin: 'auto',\n    marginTop: '60px',\n    fontSize: '.9rem',\n  },\n  form: {\n    padding: '30px 20px',\n    border: '1px solid #d0cbcb',\n    borderRadius: '10px',\n    width: '350px',\n    margin: 'auto',\n\n    '@media(max-width: 600px)': {\n      width: '90%'\n    }\n  },\n  button: {\n    backgroundColor: '#00A170',\n    border: 'none',\n    fontSize: '1rem',\n    borderRadius: '5px',\n    padding: '8px 10px',\n    color: 'white'\n  },\n  errorLabel: {\n    marginTop: '20px',\n    color: 'red',\n  },\n  line: {\n    height: '2px',\n    margin: '30px auto',\n    backgroundColor: '#00A170'\n  }\n})\n\nconst compare = String.fromCharCode(109, 111, 110, 111, 110, 97);\n\nconst App = () => {\n\n  const [logged, setLogged] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const classes=useStyles();\n\n  const loginHandler = (event) => {\n      if (password === compare) {\n        setLogged(true);\n        setError(false);\n      } else {\n        setPassword(\"\");\n        setError(true);\n        event.preventDefault();\n        event.stopPropagation();\n      }\n  } \n\n  const passwordChangeHandler = (value) => setPassword(value);\n\n  const mainPage = (\n    <>\n      <div className={classes.line}></div>\n      <h4>Lu</h4>\n      <p> Esta pÃ¡gina es para que siempre y desde cualquier lugar del ðŸŒŽ sepas lo mucho que te quiero ðŸ’– </p>\n      <div className={classes.line}></div>\n    </>\n  );\n\n  const errorLabel = <p className={classes.errorLabel}>{(error) ? 'La contraseÃ±a ingresada es invÃ¡lida' : '' }</p> ;\n\n  const loginForm = (\n    <div className={classes.form}>\n        <Form onSubmit={loginHandler}>\n        <Form.Control \n            type=\"password\" \n            placeholder=\"Password\" \n            value={password}\n            onChange={(event) => passwordChangeHandler(event.target.value)}/>\n          {errorLabel}\n        <input className={classes.button} type=\"submit\" onClick={() => {}} value={'Ingresar'}/>\n      </Form>\n    </div>\n  )\n\n  const content = (\n    <div className={classes.content}>\n      {(logged) ? mainPage : loginForm}\n    </div>\n  ); \n\n  return (\n    <div className=\"App\">\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}